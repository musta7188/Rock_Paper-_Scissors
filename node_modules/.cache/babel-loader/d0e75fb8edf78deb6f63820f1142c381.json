{"ast":null,"code":"import paper from \"../images/icon-paper.svg\";\nimport rock from \"../images/icon-rock.svg\";\nimport scissors from \"../images/icon-scissors.svg\"; ///takes a user choice and return one of the image\n\nexport const setUserChoiceStateImage = choice => {\n  let image = \"\";\n\n  switch (choice) {\n    case \"paper\":\n      image = paper;\n      break;\n\n    case \"rock\":\n      image = rock;\n      break;\n\n    case \"scissors\":\n      image = scissors;\n      break;\n\n    default:\n      image = \"\";\n  }\n\n  return image;\n}; ////generate random choice for the computer\n\nexport const getComputerChoice = () => {\n  let computerChoice = [\"paper\", \"rock\", \"scissors\"];\n  let random = Math.floor(Math.random() * computerChoice.length);\n  return computerChoice[random];\n};\nexport const gameStart = (userPick, computerPick) => {\n  if (userPick === computerPick) {\n    return \"Draw\";\n  }\n\n  if (userPick === \"rock\" && computerPick === \"scissors\") {\n    return \"Win\";\n  }\n\n  if (userPick === \"scissors\" && computerPick === \"paper\") {\n    return \"Win\";\n  }\n\n  if (userPick === \"paper\" && computerPick === \"rock\") {\n    return \"Win\";\n  } else {\n    return \"Lose\";\n  }\n};","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/Shared/SharedFunction.js"],"names":["setUserChoiceStateImage","choice","image","paper","rock","scissors","getComputerChoice","computerChoice","random","Math","floor","length","gameStart","userPick","computerPick"],"mappings":";;oDAIA;;AACA,OAAO,MAAMA,uBAAuB,GAAIC,MAAD,IAAY;AACjD,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAQD,MAAR;AACE,SAAK,OAAL;AACEC,MAAAA,KAAK,GAAGC,KAAR;AACA;;AACF,SAAK,MAAL;AACED,MAAAA,KAAK,GAAGE,IAAR;AACA;;AACF,SAAK,UAAL;AACEF,MAAAA,KAAK,GAAGG,QAAR;AACA;;AACF;AACEH,MAAAA,KAAK,GAAG,EAAR;AAXJ;;AAcA,SAAOA,KAAP;AACD,CAjBM,C,CAmBP;;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAM;AACrC,MAAIC,cAAc,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,UAAlB,CAArB;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBD,cAAc,CAACI,MAA1C,CAAb;AACA,SAAOJ,cAAc,CAACC,MAAD,CAArB;AACD,CAJM;AAMP,OAAO,MAAMI,SAAS,GAAG,CAACC,QAAD,EAAWC,YAAX,KAA4B;AACnD,MAAID,QAAQ,KAAKC,YAAjB,EAA+B;AAC7B,WAAO,MAAP;AACD;;AACD,MAAID,QAAQ,KAAK,MAAb,IAAuBC,YAAY,KAAK,UAA5C,EAAwD;AACtD,WAAO,KAAP;AACD;;AACD,MAAID,QAAQ,KAAK,UAAb,IAA2BC,YAAY,KAAK,OAAhD,EAAyD;AACvD,WAAO,KAAP;AACD;;AACD,MAAID,QAAQ,KAAK,OAAb,IAAwBC,YAAY,KAAK,MAA7C,EAAqD;AACnD,WAAO,KAAP;AACD,GAFD,MAEO;AACL,WAAO,MAAP;AACD;AACF,CAfM","sourcesContent":["import paper from \"../images/icon-paper.svg\";\nimport rock from \"../images/icon-rock.svg\";\nimport scissors from \"../images/icon-scissors.svg\";\n\n///takes a user choice and return one of the image\nexport const setUserChoiceStateImage = (choice) => {\n  let image = \"\";\n  switch (choice) {\n    case \"paper\":\n      image = paper;\n      break;\n    case \"rock\":\n      image = rock;\n      break;\n    case \"scissors\":\n      image = scissors;\n      break;\n    default:\n      image = \"\";\n  }\n\n  return image;\n};\n\n////generate random choice for the computer\nexport const getComputerChoice = () => {\n  let computerChoice = [\"paper\", \"rock\", \"scissors\"];\n  let random = Math.floor(Math.random() * computerChoice.length);\n  return computerChoice[random];\n};\n\nexport const gameStart = (userPick, computerPick) => {\n  if (userPick === computerPick) {\n    return \"Draw\";\n  }\n  if (userPick === \"rock\" && computerPick === \"scissors\") {\n    return \"Win\";\n  }\n  if (userPick === \"scissors\" && computerPick === \"paper\") {\n    return \"Win\";\n  }\n  if (userPick === \"paper\" && computerPick === \"rock\") {\n    return \"Win\";\n  } else {\n    return \"Lose\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}