{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\n\nfunction storeInLocalStorage(state) {\n  //stringify the state and save in the local storage\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getStateFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst stateInLocalStorage = getStateFromLocalStorage();\nconst store = createStore(reducer, stateInLocalStorage, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nstore.subscribe(() => storeInLocalStorage(store.getState()));\nexport default store;","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/redux/store.js"],"names":["createStore","combineReducers","reducer","storeInLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","getStateFromLocalStorage","getItem","undefined","parse","stateInLocalStorage","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC;AACA,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAED,SAASG,wBAAT,GAAoC;AAClC,MAAI;AACF,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;AAC9B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACD,GAJD,CAIE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOK,SAAP;AACD;AACF;;AAED,MAAME,mBAAmB,GAAGJ,wBAAwB,EAApD;AACA,MAAMK,KAAK,GAAGlB,WAAW,CACvBE,OADuB,EAEvBe,mBAFuB,EAGvBE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAHhB,CAAzB;AAMAF,KAAK,CAACG,SAAN,CAAgB,MAAMlB,mBAAmB,CAACe,KAAK,CAACI,QAAN,EAAD,CAAzC;AAEA,eAAeJ,KAAf","sourcesContent":["import { createStore, combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\n\nfunction storeInLocalStorage(state) {\n  //stringify the state and save in the local storage\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction getStateFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst stateInLocalStorage = getStateFromLocalStorage();\nconst store = createStore(\n  reducer,\n  stateInLocalStorage,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => storeInLocalStorage(store.getState()));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}