{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/Game/RulesButton.js\";\nimport React from \"react\";\nimport Rules from \"./Rules\";\nimport '../Style/RulesButton.css';\nexport default function RulesButton({\n  state,\n  setRulesFunction\n}) {\n  // check if the state of is true or false and return the rules in case is true\n  const returnStateButton = state => state ? /*#__PURE__*/_jsxDEV(Rules, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 49\n  }, this) : \"\";\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rules_button\",\n    children: [returnStateButton(state), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setRulesFunction(!state),\n      children: \"RULES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = RulesButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RulesButton\");","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/Game/RulesButton.js"],"names":["React","Rules","RulesButton","state","setRulesFunction","returnStateButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,0BAAP;AACA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAArB,EAAkD;AAE/D;AACA,QAAMC,iBAAiB,GAAIF,KAAD,IAAYA,KAAK,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAH,GAAe,EAA1D;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,eACGE,iBAAiB,CAACF,KAAD,CADpB,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,CAACD,KAAF,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KAZuBD,W","sourcesContent":["import React from \"react\";\nimport Rules from \"./Rules\";\nimport '../Style/RulesButton.css'\nexport default function RulesButton({ state, setRulesFunction }) {\n\n  // check if the state of is true or false and return the rules in case is true\n  const returnStateButton = (state) => (state ? <Rules /> : \"\");\n\n  return (\n    <div className=\"rules_button\">\n      {returnStateButton(state)}\n      {/* function is passed as props and flip the state from true to false  */}\n      <button onClick={() => setRulesFunction(!state)}>RULES</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}