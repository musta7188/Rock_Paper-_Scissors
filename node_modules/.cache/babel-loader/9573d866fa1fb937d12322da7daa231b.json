{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/GameDashboard/RulesButton.js\";\nimport React from \"react\";\nimport Rules from \"./Rules\";\nimport \"../Style/RulesButton.css\";\nexport default function RulesButton({\n  state,\n  setRulesFunction\n}) {\n  // check if the state of is true or false and return the rules in case is true\n  const returnStateButton = state => state ? /*#__PURE__*/_jsxDEV(Rules, {\n    setRulesFunction: setRulesFunction\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this) : \"\";\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [returnStateButton(state), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rules_button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRulesFunction(!state),\n        children: \"RULES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = RulesButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RulesButton\");","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/GameDashboard/RulesButton.js"],"names":["React","Rules","RulesButton","state","setRulesFunction","returnStateButton"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,0BAAP;AACA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAArB,EAAkD;AAC/D;AACA,QAAMC,iBAAiB,GAAIF,KAAD,IACxBA,KAAK,gBAAG,QAAC,KAAD;AAAO,IAAA,gBAAgB,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAH,GAAmD,EAD1D;;AAGA,sBACE;AAAA,eACGC,iBAAiB,CAACF,KAAD,CADpB,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,CAACD,KAAF,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AASD;KAduBD,W","sourcesContent":["import React from \"react\";\nimport Rules from \"./Rules\";\nimport \"../Style/RulesButton.css\";\nexport default function RulesButton({ state, setRulesFunction }) {\n  // check if the state of is true or false and return the rules in case is true\n  const returnStateButton = (state) =>\n    state ? <Rules setRulesFunction={setRulesFunction} /> : \"\";\n\n  return (\n    <>\n      {returnStateButton(state)}\n      <div className=\"rules_button\">\n        {/* function is passed as props and flip the state from true to false  */}\n        <button onClick={() => setRulesFunction(!state)}>RULES</button>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}