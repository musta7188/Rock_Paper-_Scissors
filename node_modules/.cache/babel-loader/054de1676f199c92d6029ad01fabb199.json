{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/StartMatch/WinOrLose.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { gameStart } from '../Shared/SharedFunction';\nimport { connect } from 'react-redux';\nimport '../Style/WinOrLose.css';\n\nfunction WinOrLose({\n  computerChoice,\n  userChoice,\n  resetState\n}) {\n  _s();\n\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    setResult(gameStart(userChoice, computerChoice));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"win_lose\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `You ${result}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => resetState(null),\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n}\n\n_s(WinOrLose, \"otsdU8867Nll1OjDzAJiWNisW5I=\");\n\n_c = WinOrLose;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetState: choice => dispatch({\n      type: \"RESET\",\n      payload: {\n        choice\n      }\n    }),\n    setScore: result => dispatch({\n      type: \"RESULT\",\n      payload: {\n        result\n      }\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    userChoice: state.userChoice,\n    computerChoice: state.computerChoice,\n    score: state.score\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WinOrLose);\n\nvar _c;\n\n$RefreshReg$(_c, \"WinOrLose\");","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/StartMatch/WinOrLose.js"],"names":["React","useState","useEffect","gameStart","connect","WinOrLose","computerChoice","userChoice","resetState","result","setResult","mapDispatchToProps","dispatch","choice","type","payload","setScore","mapStateToProps","state","score"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,wBAAP;;AACA,SAASC,SAAT,CAAmB;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA;AAA7B,CAAnB,EAA6D;AAAA;;AAE3D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbQ,IAAAA,SAAS,CAACP,SAAS,CAACI,UAAD,EAAYD,cAAZ,CAAV,CAAT;AACD,GAFQ,CAAT;AAKD,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA,gBAAM,OAAMG,MAAO;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMD,UAAU,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;GAfQH,S;;KAAAA,S;;AAkBT,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLJ,IAAAA,UAAU,EAAGK,MAAD,IAAYD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAA1B,KAAD,CAD3B;AAELG,IAAAA,QAAQ,EAAGP,MAAD,IAAYG,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAAEN,QAAAA;AAAF;AAA3B,KAAD;AAFzB,GAAP;AAID,CALD;;AAQA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,UAAU,EAAEW,KAAK,CAACX,UADb;AAELD,IAAAA,cAAc,EAAEY,KAAK,CAACZ,cAFjB;AAGLa,IAAAA,KAAK,EAAED,KAAK,CAACC;AAHR,GAAP;AAKD,CAND;;AAQA,eAAef,OAAO,CAACa,eAAD,EAAkBN,kBAAlB,CAAP,CAA6CN,SAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {gameStart} from '../Shared/SharedFunction'\nimport {connect} from 'react-redux'\nimport '../Style/WinOrLose.css'\nfunction WinOrLose({computerChoice, userChoice, resetState}) {\n\n  const [result, setResult] = useState(null)\n\n  useEffect(() =>{\n    setResult(gameStart(userChoice,computerChoice))\n  })\n\n  \n return (\n  <div className=\"win_lose\">\n    <h1>{`You ${result}`}</h1>\n    <button onClick={() => resetState(null)}>Play Again</button>\n  </div>\n  )\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetState: (choice) => dispatch({ type: \"RESET\", payload: { choice } }),\n    setScore: (result) => dispatch({ type: \"RESULT\", payload: { result } }),\n  };\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userChoice: state.userChoice,\n    computerChoice: state.computerChoice,\n    score: state.score\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WinOrLose);\n\n"]},"metadata":{},"sourceType":"module"}