{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/StartMatch/Computer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { setUserChoiceStateImage, getComputerChoice } from '../Shared/SharedFunction';\nimport { connect } from 'react-redux';\nimport Chip from '../Shared/Chip';\nimport '../Style/Chip.css';\nexport function Computer({\n  computerChoice,\n  showResult\n}) {\n  _s();\n\n  let className = \"computer\";\n  let classNameForDashboard = \"result-dashboard computer\";\n  const [choice, setChoice] = useState(null);\n  useEffect(() => {\n    let state = null;\n    setTimeout(() => {\n      state = getComputerChoice();\n      setChoice(state);\n      computerChoice(state);\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: showResult ? `${classNameForDashboard}` : `${className} `,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mobile\",\n      children: \"THE HOUSE PICKED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), choice ? /*#__PURE__*/_jsxDEV(Chip, {\n      className: choice,\n      srcImage: setUserChoiceStateImage(choice)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"null\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 91\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Computer, \"YhPFAYWmllUCB/MYemQUrRvsFS0=\");\n\n_c = Computer;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    computerChoice: choice => dispatch({\n      type: \"COMPUTER_CHOICE\",\n      payload: {\n        choice\n      }\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    showResult: state.showResult\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Computer);\n\nvar _c;\n\n$RefreshReg$(_c, \"Computer\");","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/StartMatch/Computer.js"],"names":["React","useState","useEffect","setUserChoiceStateImage","getComputerChoice","connect","Chip","Computer","computerChoice","showResult","className","classNameForDashboard","choice","setChoice","state","setTimeout","mapDispatchToProps","dispatch","type","payload","mapStateToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAAQC,uBAAR,EAAiCC,iBAAjC,QAAyD,0BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,mBAAP;AAEA,OAAO,SAASC,QAAT,CAAkB;AAACC,EAAAA,cAAD;AAAgBC,EAAAA;AAAhB,CAAlB,EAAgD;AAAA;;AAErD,MAAIC,SAAS,GAAG,UAAhB;AACA,MAAIC,qBAAqB,GAAG,2BAA5B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AAEb,QAAIY,KAAK,GAAG,IAAZ;AACAC,IAAAA,UAAU,CAAC,MAAK;AAChBD,MAAAA,KAAK,GAAGV,iBAAiB,EAAzB;AACAS,MAAAA,SAAS,CAACC,KAAD,CAAT;AACAN,MAAAA,cAAc,CAACM,KAAD,CAAd;AACC,KAJS,EAIP,IAJO,CAAV;AAMD,GATQ,EASN,EATM,CAAT;AAaA,sBACG;AAAM,IAAA,SAAS,EAAEL,UAAU,GAAI,GAAEE,qBAAsB,EAA5B,GAAiC,GAAED,SAAU,GAAxE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,MAAM,gBAAE,QAAC,IAAD;AAAO,MAAA,SAAS,EAAEA,MAAlB;AAA0B,MAAA,QAAQ,EAAET,uBAAuB,CAACS,MAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,YAAF,gBAA4E;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFrF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMD;;GAzBeL,Q;;KAAAA,Q;;AA2BhB,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,cAAc,EAAGI,MAAD,IAAYK,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAE;AAAEP,QAAAA;AAAF;AAApC,KAAD;AAD/B,GAAP;AAGD,CAJD;;AAMA,MAAMQ,eAAe,GAAIN,KAAD,IAAU;AAChC,SAAM;AACJL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AADd,GAAN;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACe,eAAD,EAAiBJ,kBAAjB,CAAP,CAA4CT,QAA5C,CAAf","sourcesContent":["import React, { useState, useEffect }from 'react'\nimport {setUserChoiceStateImage, getComputerChoice} from '../Shared/SharedFunction'\nimport {connect} from 'react-redux'\nimport Chip from '../Shared/Chip'\nimport '../Style/Chip.css'\n\nexport function Computer({computerChoice,showResult }) {\n\n  let className = \"computer\"\n  let classNameForDashboard = \"result-dashboard computer\"\n  const [choice, setChoice] = useState(null)\n\n  useEffect(() =>{\n\n    let state = null\n    setTimeout(() =>{\n    state = getComputerChoice()\n    setChoice(state)\n    computerChoice(state)\n    }, 1000)\n    \n  }, [])\n\n\n\n  return (\n     <div  className={showResult ? `${classNameForDashboard}` : `${className} `}>\n       <h1 className=\"mobile\">THE HOUSE PICKED</h1>\n      { choice? <Chip  className={choice} srcImage={setUserChoiceStateImage(choice)}/> :  <div className='null'></div>}\n     </div> \n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    computerChoice: (choice) => dispatch({ type: \"COMPUTER_CHOICE\", payload: { choice } }),\n  };\n};\n\nconst mapStateToProps = (state) =>{\n  return{\n    showResult: state.showResult,\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Computer);\n\n"]},"metadata":{},"sourceType":"module"}