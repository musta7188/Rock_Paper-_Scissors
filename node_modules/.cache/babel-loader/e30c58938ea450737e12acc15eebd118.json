{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { gameStart } from '../Shared/SharedFunction';\nimport { connect } from 'react-redux';\nimport '../Style/WinOrLose.css';\n\nfunction WinOrLose({\n  userChoice,\n  computerChoice,\n  resetState,\n  setScore,\n  score\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showResult(result)\n  }, void 0, false);\n}\n\n_c = WinOrLose;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetState: choice => dispatch({\n      type: \"RESET\",\n      payload: {\n        choice\n      }\n    }),\n    setScore: result => dispatch({\n      type: \"RESULT\",\n      payload: {\n        result\n      }\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    userChoice: state.userChoice,\n    computerChoice: state.computerChoice,\n    score: state.score\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WinOrLose);\n\nvar _c;\n\n$RefreshReg$(_c, \"WinOrLose\");","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/StartMatch/WinOrLose.js"],"names":["React","useState","useEffect","gameStart","connect","WinOrLose","userChoice","computerChoice","resetState","setScore","score","showResult","result","mapDispatchToProps","dispatch","choice","type","payload","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,wBAAP;;AACA,SAASC,SAAT,CAAmB;AAACC,EAAAA,UAAD;AAAYC,EAAAA,cAAZ;AAA4BC,EAAAA,UAA5B;AAAwCC,EAAAA,QAAxC;AAAkDC,EAAAA;AAAlD,CAAnB,EAA6E;AAI5E,sBACE;AAAA,cACAC,UAAU,CAACC,MAAD;AADV,mBADF;AAKA;;KATQP,S;;AAUT,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLN,IAAAA,UAAU,EAAGO,MAAD,IAAYD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAA1B,KAAD,CAD3B;AAELN,IAAAA,QAAQ,EAAGG,MAAD,IAAYE,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAAEL,QAAAA;AAAF;AAA3B,KAAD;AAFzB,GAAP;AAID,CALD;;AAQA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,UAAU,EAAEa,KAAK,CAACb,UADb;AAELC,IAAAA,cAAc,EAAEY,KAAK,CAACZ,cAFjB;AAGLG,IAAAA,KAAK,EAAES,KAAK,CAACT;AAHR,GAAP;AAKD,CAND;;AAQA,eAAeN,OAAO,CAACc,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CR,SAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {gameStart} from '../Shared/SharedFunction'\nimport {connect} from 'react-redux'\nimport '../Style/WinOrLose.css'\nfunction WinOrLose({userChoice,computerChoice, resetState, setScore, score}) {\n\n\n  \n return (\n   <>\n  {showResult(result)}\n  </>\n  )\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetState: (choice) => dispatch({ type: \"RESET\", payload: { choice } }),\n    setScore: (result) => dispatch({ type: \"RESULT\", payload: { result } }),\n  };\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userChoice: state.userChoice,\n    computerChoice: state.computerChoice,\n    score: state.score\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WinOrLose);\n\n"]},"metadata":{},"sourceType":"module"}