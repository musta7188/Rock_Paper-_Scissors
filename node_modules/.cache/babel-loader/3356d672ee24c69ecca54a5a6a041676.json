{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/design/src/StartMatch/Computer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { setUserChoiceStateImage, getComputerChoice } from \"../Shared/SharedFunction\";\nimport { connect } from \"react-redux\";\nimport Chip from \"../Shared/Chip\";\nimport \"../Style/Chip.css\";\nexport function Computer({\n  computerChoice,\n  showResult\n}) {\n  _s();\n\n  let className = \"computer\";\n  let classNameForDashboard = \"result-dashboard computer\";\n  const [choice, setChoice] = useState(null);\n  useEffect(() => {\n    let state = null;\n    setTimeout(() => {\n      state = getComputerChoice();\n      setChoice(state);\n      computerChoice(state);\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: showResult ? `${classNameForDashboard}` : `${className} `,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mobile\",\n      children: \"THE HOUSE PICKED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), choice ? /*#__PURE__*/_jsxDEV(Chip, {\n      className: choice,\n      srcImage: setUserChoiceStateImage(choice)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"null\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Computer, \"YhPFAYWmllUCB/MYemQUrRvsFS0=\");\n\n_c = Computer;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    computerChoice: choice => dispatch({\n      type: \"COMPUTER_CHOICE\",\n      payload: {\n        choice\n      }\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    showResult: state.showResult\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Computer);\n\nvar _c;\n\n$RefreshReg$(_c, \"Computer\");","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/design/src/StartMatch/Computer.js"],"names":["React","useState","useEffect","setUserChoiceStateImage","getComputerChoice","connect","Chip","Computer","computerChoice","showResult","className","classNameForDashboard","choice","setChoice","state","setTimeout","mapDispatchToProps","dispatch","type","payload","mapStateToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,uBADF,EAEEC,iBAFF,QAGO,0BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,mBAAP;AAEA,OAAO,SAASC,QAAT,CAAkB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,EAAkD;AAAA;;AACvD,MAAIC,SAAS,GAAG,UAAhB;AACA,MAAIC,qBAAqB,GAAG,2BAA5B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,KAAK,GAAG,IAAZ;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,KAAK,GAAGV,iBAAiB,EAAzB;AACAS,MAAAA,SAAS,CAACC,KAAD,CAAT;AACAN,MAAAA,cAAc,CAACM,KAAD,CAAd;AACD,KAJS,EAIP,IAJO,CAAV;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAEL,UAAU,GAAI,GAAEE,qBAAsB,EAA5B,GAAiC,GAAED,SAAU,GAAvE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,MAAM,gBACL,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEA,MAAjB;AAAyB,MAAA,QAAQ,EAAET,uBAAuB,CAACS,MAAD;AAA1D;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxBeL,Q;;KAAAA,Q;;AA0BhB,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,cAAc,EAAGI,MAAD,IACdK,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAE;AAAEP,QAAAA;AAAF;AAApC,KAAD;AAFL,GAAP;AAID,CALD;;AAOA,MAAMQ,eAAe,GAAIN,KAAD,IAAW;AACjC,SAAO;AACLL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACe,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  setUserChoiceStateImage,\n  getComputerChoice,\n} from \"../Shared/SharedFunction\";\nimport { connect } from \"react-redux\";\nimport Chip from \"../Shared/Chip\";\nimport \"../Style/Chip.css\";\n\nexport function Computer({ computerChoice, showResult }) {\n  let className = \"computer\";\n  let classNameForDashboard = \"result-dashboard computer\";\n  const [choice, setChoice] = useState(null);\n\n  useEffect(() => {\n    let state = null;\n    setTimeout(() => {\n      state = getComputerChoice();\n      setChoice(state);\n      computerChoice(state);\n    }, 1000);\n  }, []);\n\n  return (\n    <div className={showResult ? `${classNameForDashboard}` : `${className} `}>\n      <h1 className=\"mobile\">THE HOUSE PICKED</h1>\n      {choice ? (\n        <Chip className={choice} srcImage={setUserChoiceStateImage(choice)} />\n      ) : (\n        <div className=\"null\"></div>\n      )}\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    computerChoice: (choice) =>\n      dispatch({ type: \"COMPUTER_CHOICE\", payload: { choice } }),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    showResult: state.showResult,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Computer);\n"]},"metadata":{},"sourceType":"module"}