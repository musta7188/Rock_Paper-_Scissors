{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/StartMatch/WinOrLose.js\";\nimport React from 'react';\nimport { gameStart } from '../Shared/SharedFunction';\nimport { connect } from 'react-redux';\nimport '../Style/WinOrLose.css';\n\nfunction WinOrLose({\n  userChoice,\n  computerChoice,\n  resetGame,\n  setResult,\n  score\n}) {\n  let result = gameStart(userChoice, computerChoice);\n\n  if (result) {\n    return setResult(1);\n  } else {\n    return setResult(-1);\n  }\n\n  const showResult = (user, computer, resultGame) => {\n    if (user && computer) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"win_lose\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: resultGame ? \"You win\" : \"You Lose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => resetGame(null),\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    } else {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showResult(userChoice, computerChoice, result)\n  }, void 0, false);\n}\n\n_c = WinOrLose;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetGame: choice => dispatch({\n      type: \"RESET\",\n      payload: {\n        choice\n      }\n    }),\n    setResult: result => dispatch({\n      type: \"RESULT\",\n      payload: {\n        result\n      }\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    userChoice: state.userChoice,\n    computerChoice: state.computerChoice,\n    score: state.score\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WinOrLose);\n\nvar _c;\n\n$RefreshReg$(_c, \"WinOrLose\");","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/StartMatch/WinOrLose.js"],"names":["React","gameStart","connect","WinOrLose","userChoice","computerChoice","resetGame","setResult","score","result","showResult","user","computer","resultGame","mapDispatchToProps","dispatch","choice","type","payload","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,wBAAP;;AACA,SAASC,SAAT,CAAmB;AAACC,EAAAA,UAAD;AAAYC,EAAAA,cAAZ;AAA4BC,EAAAA,SAA5B;AAAuCC,EAAAA,SAAvC;AAAkDC,EAAAA;AAAlD,CAAnB,EAA6E;AAE3E,MAAIC,MAAM,GAAGR,SAAS,CAACG,UAAD,EAAaC,cAAb,CAAtB;;AACA,MAAGI,MAAH,EAAU;AACR,WAAOF,SAAS,CAAC,CAAD,CAAhB;AACD,GAFD,MAEM;AACJ,WAAOA,SAAS,CAAC,CAAC,CAAF,CAAhB;AACD;;AAED,QAAMG,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,UAAjB,KAA+B;AAChD,QAAGF,IAAI,IAAIC,QAAX,EAAoB;AAClB,0BAAO;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACP;AAAA,oBACGC,UAAU,GAAE,SAAF,GAAa;AAD1B;AAAA;AAAA;AAAA;AAAA,gBADO,eAIP;AAAQ,UAAA,OAAO,EAAE,MAAMP,SAAS,CAAC,IAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJO;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAMD,KAPD,MAOM;AACJ;AACD;AACF,GAXD;;AAaD,sBACE;AAAA,cACAI,UAAU,CAACN,UAAD,EAAaC,cAAb,EAA6BI,MAA7B;AADV,mBADF;AAKA;;KA3BQN,S;;AA4BT,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,SAAS,EAAGU,MAAD,IAAYD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAA1B,KAAD,CAD1B;AAELT,IAAAA,SAAS,EAAGE,MAAD,IAAYM,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAAET,QAAAA;AAAF;AAA3B,KAAD;AAF1B,GAAP;AAID,CALD;;AAQA,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLhB,IAAAA,UAAU,EAAEgB,KAAK,CAAChB,UADb;AAELC,IAAAA,cAAc,EAAEe,KAAK,CAACf,cAFjB;AAGLG,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AAHR,GAAP;AAKD,CAND;;AAQA,eAAeN,OAAO,CAACiB,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CX,SAA7C,CAAf","sourcesContent":["import React from 'react'\nimport {gameStart} from '../Shared/SharedFunction'\nimport {connect} from 'react-redux'\nimport '../Style/WinOrLose.css'\nfunction WinOrLose({userChoice,computerChoice, resetGame, setResult, score}) {\n\n  let result = gameStart(userChoice, computerChoice)\n  if(result){\n    return setResult(1)\n  } else{\n    return setResult(-1)\n  }\n\n  const showResult = (user, computer, resultGame) =>{\n    if(user && computer){\n      return <div className=\"win_lose\">\n      <h1 >\n        {resultGame? \"You win\": \"You Lose\"}\n        </h1>\n      <button onClick={() => resetGame(null)}>Play Again</button>\n    </div>\n    } else{\n      return;\n    }\n  }\n  \n return (\n   <>\n  {showResult(userChoice, computerChoice, result)}\n  </>\n  )\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetGame: (choice) => dispatch({ type: \"RESET\", payload: { choice } }),\n    setResult: (result) => dispatch({ type: \"RESULT\", payload: { result } }),\n  };\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userChoice: state.userChoice,\n    computerChoice: state.computerChoice,\n    score: state.score\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WinOrLose);\n\n"]},"metadata":{},"sourceType":"module"}