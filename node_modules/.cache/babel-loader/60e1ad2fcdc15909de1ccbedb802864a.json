{"ast":null,"code":"import paper from \"../images/icon-paper.svg\";\nimport rock from \"../images/icon-rock.svg\";\nimport scissors from \"../images/icon-scissors.svg\"; ///takes a user choice and return one of the image\n\nexport const setUserChoiceStateImage = choice => {\n  let image = \"\";\n\n  switch (choice) {\n    case 'paper':\n      image = paper;\n      break;\n\n    case 'rock':\n      image = rock;\n      break;\n\n    case 'scissors':\n      image = scissors;\n      break;\n\n    default:\n      image = \"\";\n  }\n\n  return image;\n}; ////generate random choice for the computer\n\nexport const getComputerChoice = () => {\n  let computerChoice = [\"paper\", \"rock\", \"scissors\"];\n  let random = Math.floor(Math.random() * computerChoice.length);\n  return computerChoice[random];\n};\nexport const game = (userPick, computerPic) => {\n  if (userPick === \"scissors\" && computerPic === \"scissors\") {\n    return true;\n  }\n\n  if (userPick === \"rock\" && computerPic === \"scissors\") {\n    return true;\n  }\n\n  if (userPick === \"scissors\" && computerPic === \"paper\") {\n    return true;\n  }\n\n  if (userPick === \"paper\" && computerPic === \"rock\") {\n    return true;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/musta88/Development/code/SaltPay_interview_challange/saltpay-front-end-tech-challenge-ildizm/src/Shared/SharedFunction.js"],"names":["setUserChoiceStateImage","choice","image","paper","rock","scissors","getComputerChoice","computerChoice","random","Math","floor","length","game","userPick","computerPic"],"mappings":";;oDAIA;;AACA,OAAO,MAAMA,uBAAuB,GAAIC,MAAD,IAAW;AAChD,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAOD,MAAP;AACE,SAAK,OAAL;AACEC,MAAAA,KAAK,GAAIC,KAAT;AACA;;AACF,SAAK,MAAL;AACED,MAAAA,KAAK,GAAGE,IAAR;AACA;;AACF,SAAK,UAAL;AACEF,MAAAA,KAAK,GAAIG,QAAT;AACA;;AACA;AACEH,MAAAA,KAAK,GAAG,EAAR;AAXN;;AAcA,SAAOA,KAAP;AAED,CAlBM,C,CAqBP;;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAK;AACpC,MAAIC,cAAc,GAAG,CAAC,OAAD,EAAS,MAAT,EAAgB,UAAhB,CAArB;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBD,cAAc,CAACI,MAA1C,CAAb;AACA,SAAOJ,cAAc,CAACC,MAAD,CAArB;AACD,CAJM;AASP,OAAO,MAAMI,IAAI,GAAG,CAACC,QAAD,EAAWC,WAAX,KAA0B;AAE9C,MAAGD,QAAQ,KAAK,UAAb,IAA2BC,WAAW,KAAK,UAA9C,EAAyD;AACvD,WAAO,IAAP;AACD;;AACD,MAAGD,QAAQ,KAAK,MAAb,IAAuBC,WAAW,KAAK,UAA1C,EAAqD;AACnD,WAAO,IAAP;AACD;;AACD,MAAGD,QAAQ,KAAK,UAAb,IAA2BC,WAAW,KAAK,OAA9C,EAAsD;AACpD,WAAO,IAAP;AACD;;AACD,MAAGD,QAAQ,KAAK,OAAb,IAAwBC,WAAW,KAAK,MAA3C,EAAkD;AAChD,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AAEA,CAjBM","sourcesContent":["import paper from '../images/icon-paper.svg'\nimport rock from '../images/icon-rock.svg'\nimport scissors from '../images/icon-scissors.svg'\n\n///takes a user choice and return one of the image\nexport const setUserChoiceStateImage = (choice) =>{\n  let image = \"\"\n  switch(choice){\n    case 'paper':\n      image =  paper\n      break;\n    case 'rock':\n      image = rock\n      break;\n    case 'scissors':\n      image =  scissors\n      break;\n      default:\n        image = \"\"\n  }\n\n  return image\n\n}\n\n\n////generate random choice for the computer\nexport const getComputerChoice = () =>{\n  let computerChoice = [\"paper\",\"rock\",\"scissors\"]\n  let random = Math.floor(Math.random() * computerChoice.length)\n  return computerChoice[random]\n}\n\n\n\n\nexport const game = (userPick, computerPic) =>{\n\nif(userPick === \"scissors\" && computerPic === \"scissors\"){\n  return true\n}\nif(userPick === \"rock\" && computerPic === \"scissors\"){\n  return true\n}\nif(userPick === \"scissors\" && computerPic === \"paper\"){\n  return true\n}\nif(userPick === \"paper\" && computerPic === \"rock\"){\n  return true\n} else {\n  return false\n}\n\n}"]},"metadata":{},"sourceType":"module"}